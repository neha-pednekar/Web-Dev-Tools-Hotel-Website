// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using ProjectNehaPalace.Models;
using System;

namespace ProjectNehaPalace.Migrations
{
    [DbContext(typeof(BookingContext))]
    [Migration("20190418163937_AddBookingContext")]
    partial class AddBookingContext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjectNehaPalace.Models.HotelViewModels.Address", b =>
                {
                    b.Property<string>("AddressID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressLine1");

                    b.Property<string>("AddressLine2");

                    b.Property<string>("AddressType");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("State");

                    b.Property<string>("ZipCode");

                    b.HasKey("AddressID");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("ProjectNehaPalace.Models.HotelViewModels.Booking", b =>
                {
                    b.Property<string>("BookingID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BookingDate");

                    b.Property<DateTime>("CheckinDate");

                    b.Property<DateTime>("CheckoutDate");

                    b.Property<string>("CustomerID");

                    b.Property<string>("EmployeeID");

                    b.Property<DateTime>("LastModifiedDate");

                    b.Property<int>("NumberOfAdults");

                    b.Property<int>("NumberOfChildren");

                    b.Property<int>("NumberOfDays");

                    b.Property<double>("NumberOfRooms");

                    b.Property<string>("PaymentID");

                    b.Property<double>("TotalCost");

                    b.HasKey("BookingID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("PaymentID");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("ProjectNehaPalace.Models.HotelViewModels.Customer", b =>
                {
                    b.Property<string>("CustomerID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("PersonID");

                    b.HasKey("CustomerID");

                    b.HasIndex("PersonID");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("ProjectNehaPalace.Models.HotelViewModels.Department", b =>
                {
                    b.Property<string>("DepartmentID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DepartmentName");

                    b.HasKey("DepartmentID");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("ProjectNehaPalace.Models.HotelViewModels.Employee", b =>
                {
                    b.Property<string>("EmployeeID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DepartmentID");

                    b.Property<string>("EmployeeCode");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("PersonID");

                    b.Property<string>("SSN");

                    b.HasKey("EmployeeID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("PersonID");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("ProjectNehaPalace.Models.HotelViewModels.Payment", b =>
                {
                    b.Property<string>("PaymentID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CVV");

                    b.Property<string>("CreditCardNumber");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<string>("NameOnCard");

                    b.HasKey("PaymentID");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("ProjectNehaPalace.Models.HotelViewModels.Person", b =>
                {
                    b.Property<string>("PersonID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressID");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("PersonID");

                    b.HasIndex("AddressID");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("ProjectNehaPalace.Models.HotelViewModels.Room", b =>
                {
                    b.Property<int>("RoomID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Availability");

                    b.Property<string>("BookingID");

                    b.Property<bool>("IsAvailable");

                    b.Property<DateTime>("LastModifiedDate");

                    b.Property<int>("RoomNumber");

                    b.Property<double>("RoomTariff");

                    b.Property<string>("RoomType");

                    b.Property<int>("RoomsOccupied");

                    b.Property<int>("TotalNumberOfRooms");

                    b.HasKey("RoomID");

                    b.HasIndex("BookingID");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("ProjectNehaPalace.Models.HotelViewModels.Booking", b =>
                {
                    b.HasOne("ProjectNehaPalace.Models.HotelViewModels.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.HasOne("ProjectNehaPalace.Models.HotelViewModels.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID");

                    b.HasOne("ProjectNehaPalace.Models.HotelViewModels.Payment", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentID");
                });

            modelBuilder.Entity("ProjectNehaPalace.Models.HotelViewModels.Customer", b =>
                {
                    b.HasOne("ProjectNehaPalace.Models.HotelViewModels.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonID");
                });

            modelBuilder.Entity("ProjectNehaPalace.Models.HotelViewModels.Employee", b =>
                {
                    b.HasOne("ProjectNehaPalace.Models.HotelViewModels.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID");

                    b.HasOne("ProjectNehaPalace.Models.HotelViewModels.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonID");
                });

            modelBuilder.Entity("ProjectNehaPalace.Models.HotelViewModels.Person", b =>
                {
                    b.HasOne("ProjectNehaPalace.Models.HotelViewModels.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressID");
                });

            modelBuilder.Entity("ProjectNehaPalace.Models.HotelViewModels.Room", b =>
                {
                    b.HasOne("ProjectNehaPalace.Models.HotelViewModels.Booking")
                        .WithMany("Room")
                        .HasForeignKey("BookingID");
                });
#pragma warning restore 612, 618
        }
    }
}
